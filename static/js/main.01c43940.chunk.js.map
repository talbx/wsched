{"version":3,"sources":["models/FoodType.ts","models/Dish.ts","util/tools.ts","util/DishesSupplier.ts","components/home/RestoreForm.tsx","components/home/DishCard.tsx","components/home/CorruptionCard.tsx","components/home/DishesContainer.tsx","util/dateUtils.ts","components/home/DishesContainerCard.tsx","components/home/WeekplanCard.tsx","components/home/WeekplanComponent.tsx","components/roadmap/RoadmapComponent.tsx","App.tsx","index.tsx"],"names":["FoodType","Gender","md5","require","Dish","name","veggie","type","uuid","this","console","log","ExceptionDish","sex","dish","regularDish","REGULAR","order","ORDER","exceptionDish","gender","EXCEPTION","dishes","deliveryServices","exceptionDishes","MALE","FEMALE","femaleDish","allDishesAndServices","v","nxt1","s","y","split","map","x","replace","rep","nxt","forEach","a","c","charCodeAt","String","fromCharCode","r","DishesSupplier","withOrder_","veggieOnly_","exceptionDishes_","withBbq_","bool","arr","push","find","service","selection","sort","Math","random","slice","generateKey","key","substring","RestoreForm","param","useState","validKey","setValidKey","decodeId","event","restoredSchedule","match","RegExp","filter","includes","keyToSchedule","scheduleKey","length","dishesCallback","restoreFlag","preventDefault","Grid","Column","Card","Header","as","onSubmit","Container","container","columns","style","marginTop","stackable","Row","Input","onChange","data","value","keyFn","icon","placeholder","Button","disabled","onClick","basic","color","DishCard","weekDay","recreateWeekKeyCallback","recreateCommand","React","content","setContent","marginBottom","Content","header","format","extra","Label","className","newDish","regenerate","aria-hidden","CorruptionCard","DishesContainer","callback","recreateOne","previousDish","weekDishes","regenerateDish","d","curs","moment","startOf","add","id","Message","day","indexOf","createDishCard","DishesContainerCard","fluid","padding","restored","week","htmlToImage","toJpeg","document","getElementById","quality","then","dataUrl","link","createElement","kw","download","href","click","WeekplanCard","bbq","setBbq","setOrder","setVeggie","setDishes","enableExceptionDishes","validPassphrase","setValidPassphrase","setKey","isRestored","setRestore","generate","generated","withBBQ","withExceptionDishes","veggieOnly","withOrder","supply","Checkbox","toggle","label","readOnly","p","f","q","b","n","iVP","size","Divider","vertical","old","d1","d2","updatedDishes","regenerateKeys","WeekplanComponent","RoadmapComponent","display","App","active","setActive","Menu","pointing","secondary","Item","to","path","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.01c43940.chunk.js","sourcesContent":["export enum FoodType {\n    REGULAR = \"REGULAR\",\n    ORDER = \"ORDER\",\n    EXCEPTION = \"EXCEPTION\"\n}\n","import {FoodType} from \"./FoodType\";\n\nvar md5 = require('md5');\n\nexport class Dish {\n    name: string;\n    uuid: string;\n    veggie: boolean;\n    type: FoodType\n\n    constructor(name: string, veggie: boolean, type: FoodType) {\n        this.name = name;\n        this.veggie = veggie;\n        this.type = type;\n        this.uuid = md5(name + veggie + type);\n        console.log(\"created dish \" + this.name + \" with uuid \" + this.uuid);\n    }\n}\n\nexport enum Gender {\n    FEMALE = \"FEMALE\",\n    MALE = \"MALE\"\n}\n\nexport class ExceptionDish extends Dish {\n\n    sex: Gender;\n\n    constructor(name: string, veggie: boolean, type: FoodType, sex: Gender) {\n        super(name, veggie, type);\n        this.sex = sex;\n    }\n}\n\nconst dish = (name: string, veggie: boolean, type: FoodType): Dish => {\n    return new Dish(name, veggie, type);\n};\n\nconst regularDish = (name: string, veggie: boolean): Dish => {\n    return dish(name, veggie, FoodType.REGULAR);\n};\n\nconst order = (name: string, veggie: boolean): Dish => {\n    return dish(name, veggie, FoodType.ORDER);\n}\n\nconst femaleDish = (name: string): ExceptionDish => {\n    return exceptionDish(name, true, Gender.FEMALE);\n}\n\nconst maleDish = (name: string): ExceptionDish => {\n    return exceptionDish(name, false, Gender.MALE);\n}\n\nconst exceptionDish = (name: string, veggie: boolean, gender: Gender) => {\n    return new ExceptionDish(name, veggie, FoodType.EXCEPTION, gender);\n}\n\nexport const dishes: Dish[] = [\n    regularDish(\"Auflauf\", true),\n    regularDish(\"Bolo\", false),\n    regularDish(\"Brot mit Aufschnitt\", true),\n    regularDish(\"Carbonara\", false),\n    regularDish(\"Chili con carne\", false),\n    regularDish(\"Flammkuchen\", false),\n    regularDish(\"Gemüsepfanne\", true),\n    regularDish(\"Gulasch\", false),\n    regularDish(\"Grillen\", false),\n    regularDish(\"Hühnerfrikassee\", false),\n    regularDish(\"Pizza\", true),\n    regularDish(\"Normales Reiscurry\", true),\n    regularDish(\"Nudeln mit Sahne sauce\", true),\n    regularDish(\"Pfannkuchen\", true),\n    regularDish(\"Risotto\", true),\n    regularDish(\"Süßes Ananas Reis Curry\", true),\n    regularDish(\"Salat\", true),\n    regularDish(\"Tomatencreme Suppe\", true),\n    regularDish(\"Buntes Gemüse-Tortilla (Glutenfreies Kochbuch)\", true),\n    regularDish(\"Exotische Mörensuppe (Glutenfreies Kochbuch)\", true),\n    regularDish(\"Fischfilet mit Kräuterkruste (Glutenfreies Kochbuch)\", false),\n    regularDish(\"Geflügel-Reis Salat (Glutenfreies Kochbuch)\", false),\n    regularDish(\"Gulasch Petti di Pollo (Glutenfreies Kochbuch)\", false),\n    regularDish(\"Kalbsroulade (Glutenfreies Kochbuch)\", false),\n    regularDish(\"Kokos-Curry (Glutenfreies Kochbuch)\", true),\n    regularDish(\"Rote Linsen mit Schafskäse (Glutenfreies Kochbuch)\", true),\n    regularDish(\"Reispfanne mit Lachs (Glutenfreies Kochbuch)\", false),\n    regularDish(\"Rinderlende mit Paprika-Mix (Glutenfreies Kochbuch)\", false)\n];\n\nexport const deliveryServices: Dish[] = [\n    order(\"Kirat\", true),\n    order(\"Irodion\", false),\n    order(\"BurgerMe\", false),\n    order(\"Rohhäppchen\", false),\n    order(\"ReadyPizza\", true)\n];\n\nexport const exceptionDishes: ExceptionDish[] = [\n    maleDish(\"Steak mit Reis\"),\n    femaleDish(\"Tomate - Mozzarella Salat\")\n]\n\nexport const allDishesAndServices: Dish[] = [...dishes, ...deliveryServices]\n","import {allDishesAndServices, Dish} from \"../models/Dish\";\nimport htmlToImage from \"html-to-image\";\nimport moment from \"moment\";\n\nvar v = require('md5');\n\nexport function uuidv4(): string {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        const r = Math.random() * 16 | 0, v = c === 'x' ? r : ((r & 0x3) | 0x8);\n        return v.toString(16);\n    });\n}\n\nexport function generateJPEG() {\n    //@ts-ignore\n    htmlToImage.toJpeg(document.getElementById('wsched'), {quality: 0.95})\n        .then(function (dataUrl: string) {\n            var link = document.createElement('a');\n            var kw = moment().week();\n            link.download = 'wsched-' + kw + '.jpeg';\n            link.href = dataUrl;\n            link.click();\n        });\n}\n\nexport const regenerateDish = (previousDish: Dish, weekDishes: Dish[]): Dish => {\n    const type = previousDish.type;\n    const veggie = previousDish.veggie;\n    const stripped = allDishesAndServices.filter(dish => {\n        return dish !== previousDish && dish.veggie === veggie && dish.type === type && !weekDishes.includes(dish)\n    });\n    const shuffled = stripped.sort(() => 0.5 - Math.random());\n    return shuffled.slice(0, 1)[0];\n}\nexport const iVP = (\n    p: string,\n    f: (i: string) => string = v,\n    q: (p: string, c: string) => boolean = (a, b) => a === b,\n    n: (y: string) => string = nxt1\n): boolean => {\n    return q(f(p), n(r));\n}\n\nexport const dow = ['Montag', \"Dienstag\", \"Mittwoch\", \"Donnerstag\", \"Freitag\", \"Samstag\", \"Sonntag\"];\n\nexport const nxt1 = (s: string): string => {\n    let y = \"\";\n    s.split('').map(x => nxt(x)).forEach(x => y = y + x);\n    return y;\n};\n\nfunction rep(a: string) {\n    var c = a.charCodeAt(0);\n    switch (c) {\n        case 90:\n            return 'A';\n        case 122:\n            return 'a';\n        default:\n            return String.fromCharCode(++c);\n    }\n}\n\nconst r =\n    /**\n     * does a bunch of stuff\n     * **/\n    '9d3b4b2da394293d3za9d1c1d1d2b3dd';\n\n/**\n * @param s\n */\nexport function nxt(s: string): string {\n    return s.replace(/([a-zA-Z])[^a-zA-Z]*$/, rep);\n}\n\n","import {Supplier} from \"./Supplier\";\nimport {allDishesAndServices, deliveryServices, Dish, dishes, exceptionDishes} from \"../models/Dish\";\n\nexport interface WeekSchedule {\n    dishes: Dish[],\n    uuid: string\n}\n\nexport class DishesSupplier implements Supplier<WeekSchedule> {\n    private withOrder_ = false;\n    private veggieOnly_ = false;\n    private exceptionDishes_ = false;\n    private withBbq_ = false;\n\n    withOrder(bool: boolean) {\n        this.withOrder_ = bool;\n        return this;\n    }\n\n    veggieOnly(bool: boolean) {\n        this.veggieOnly_ = bool;\n        return this;\n    }\n\n    withBBQ(bool: boolean) {\n        this.withBbq_ = bool;\n        return this;\n    }\n\n    withExceptionDishes(bool: boolean) {\n        this.exceptionDishes_ = bool;\n        return this;\n    }\n\n    supply(): WeekSchedule {\n        const arr: any[] = [];\n        if (this.withBbq_ && !this.veggieOnly_) {\n            arr.push(dishes.find(dish => dish.name === 'Grillen'));\n        }\n        if (this.withOrder_) {\n            deliveryServices.forEach(service => {\n                if ((this.veggieOnly_ && service.veggie) || !this.veggieOnly_) {\n                    arr.push(service)\n                }\n            });\n        }\n        dishes.forEach((dish: Dish) => {\n            if ((this.veggieOnly_ && dish.veggie) || !this.veggieOnly_) {\n                arr.push(dish)\n            }\n        });\n\n        if (this.exceptionDishes_) {\n            arr.push(...exceptionDishes);\n        }\n\n        const shuffled = arr.sort(() => 0.5 - Math.random());\n        let selection = shuffled.slice(0, 7);\n        return {\n            dishes: selection,\n            uuid: generateKey(selection)\n        };\n    }\n}\n\n// broken key: 5fca158cdccc457c5fcad68fcba4\n// workin key: b3a8aca30313b565b27bdccc0e57\nexport const keyToSchedule = (key: string): WeekSchedule => {\n    let match = key.match(new RegExp('.{1,' + 4 + '}', 'g'));\n    var result = allDishesAndServices.filter(dish => match?.includes(dish.uuid.substring(0, 4)));\n    const shuffled = result.sort(() => 0.5 - Math.random());\n    return {\n        dishes: shuffled,\n        uuid: key\n    };\n}\nexport const generateKey = (dishes: Dish[]): string => {\n    var key = '';\n    dishes.forEach(dish => key = key + dish.uuid.substring(0, 4))\n    return key;\n}\n","import {Button, Card, Container, Grid, Input} from \"semantic-ui-react\";\nimport React, {useState} from \"react\";\nimport {keyToSchedule} from \"../../util/DishesSupplier\";\nimport {Dish} from \"../../models/Dish\";\n\ntype RestoreFormParam = { scheduleKey: string, keyFn: (a: string) => void, dishesCallback: (f: Dish[]) => void, restoreFlag: (f: boolean) => void };\nexport const RestoreForm = (param: RestoreFormParam) => {\n    const [validKey, setValidKey] = useState<boolean>(false);\n\n    function decodeId(event: React.FormEvent<HTMLFormElement> | null) {\n        const restoredSchedule = keyToSchedule(param.scheduleKey);\n        console.log(restoredSchedule);\n        console.log(param.scheduleKey);\n        console.log(\"DISHES LENGTH restored: \", restoredSchedule.dishes.length)\n        if(restoredSchedule.dishes){\n            param.dishesCallback(restoredSchedule.dishes);\n            param.restoreFlag(true);\n        }\n        if (event)\n            event.preventDefault();\n    }\n\n    function handleRecovery(value: string) {\n        param.keyFn(value);\n        setValidKey(value.length === 28);\n    }\n\n    return (\n        <Grid.Column>\n            <Card.Header as='h2'>Wochenplan wiederherstellen</Card.Header>\n            <form onSubmit={(event) => decodeId(event)}>\n                <Container>\n                    <Grid container columns={2}>\n                        <Grid style={{marginTop: \"2%\"}} container columns={2} stackable>\n                            <Grid.Row/>\n                            <Grid.Row/>\n                            <Grid.Row/>\n                            <Grid.Row/>\n                            <Grid.Column>\n                                <Input onChange={(event, data) => handleRecovery(data.value)}\n                                       icon='key' placeholder='Enter wsched key'/>\n                            </Grid.Column>\n                            <Grid.Column>\n                                <Button type=\"submit\" disabled={!validKey} onClick={() => decodeId(null)}\n                                        basic\n                                        color=\"teal\">Wiederherstellen\n                                </Button>\n                            </Grid.Column>\n                        </Grid>\n                    </Grid>\n                </Container>\n            </form>\n        </Grid.Column>\n    )\n}\n","import React from \"react\";\nimport {Card, Label} from \"semantic-ui-react\";\nimport {Dish, ExceptionDish} from \"../../models/Dish\";\nimport {FoodType} from \"../../models/FoodType\";\nimport {Moment} from \"moment\";\n\ntype Props = { dish: Dish, weekDay: Moment, recreateWeekKeyCallback: (old: Dish, newDish: Dish) => void, recreateCommand: (dish: Dish) => Dish };\n\nexport const DishCard = ({dish, weekDay, recreateWeekKeyCallback, recreateCommand}: Props) => {\n\n    const [content, setContent] = React.useState<Dish>(dish);\n\n    const regenerate = (dish: Dish) => {\n        const newDish = recreateCommand(content);\n        setContent(newDish);\n        recreateWeekKeyCallback(dish, newDish);\n    };\n\n    return (\n        <div style={{marginBottom: \"2%\"}}>\n            <Card>\n                <Card.Content header={weekDay.format('dddd') + ' ' + weekDay.format('LL')}/>\n                <Card.Content content={content.name}/>\n                <Card.Content extra>\n                    {\n                        content.veggie &&\n                        <Label basic className=\"mini\" color=\"green\">Veggie</Label>\n                    }\n                    {\n                        content.type === FoodType.ORDER &&\n                        <Label basic className=\"mini\" color=\"black\">Bestellung</Label> &&\n                        <Label basic className=\"mini\" color=\"blue\">{content.type}</Label>\n                    }\n                    {\n                        content instanceof ExceptionDish &&\n                        <Label basic className=\"mini\" color=\"red\">Exception Dish</Label> &&\n                        <Label basic className=\"mini\" color=\"blue\">{content.sex}</Label>\n                    }\n                    <i onClick={() => regenerate(dish)} aria-hidden=\"true\" className=\"refresh icon\"/>\n                </Card.Content>\n            </Card>\n        </div>\n    )\n}\n","import {Card} from \"semantic-ui-react\";\nimport React from \"react\";\n\nexport const CorruptionCard = () => {\n    return (\n        <div style={{marginBottom: \"2%\"}}>\n            <Card>\n                <Card.Content header=\"Dish could not be recreated\"/>\n            </Card>\n        </div>\n    );\n}\n","import React from \"react\";\nimport {Container, Grid, Message} from \"semantic-ui-react\";\nimport {Dish} from \"../../models/Dish\";\nimport {DishCard} from \"./DishCard\";\nimport {getCurrentWeek} from \"../../util/dateUtils\";\nimport {Moment} from \"moment\";\nimport {regenerateDish} from \"../../util/tools\";\nimport {CorruptionCard} from \"./CorruptionCard\";\n\ntype Props = { dishes: Dish[], callback: (old: Dish, newDish: Dish) => void };\nconst DishesContainer = ({dishes, callback}: Props) => {\n\n    const createDishCard = (day: Moment, curs: Moment[], dishes: Dish[]) => {\n        const dish = dishes[curs.indexOf(day)];\n        return dish ? <DishCard recreateWeekKeyCallback={callback}\n                                recreateCommand={recreateOne}\n                                key={dish.uuid}\n                                dish={dish}\n                                weekDay={day}/> : <CorruptionCard/>;\n    }\n\n    const recreateOne = (dish: Dish): Dish => {\n        let newDish = regenerateDish(dish, dishes);\n        dishes.filter(d => d !== dish).push(newDish);\n        return newDish;\n    }\n\n    const curs = getCurrentWeek();\n    return (\n        <div id=\"wsched\">\n            <Container>\n                {\n                    dishes.length !== 7 &&\n                    <div style={{marginBottom: \"5%\"}}>\n                        <Message\n                            icon='warning'\n                            header='Warning'\n                            content='Not all dishes could be parsed'\n                        />\n                    </div>\n                }\n                <Grid>\n                    {\n                        dishes.length !== 0 &&\n                        curs.map(day => createDishCard(day, curs, dishes))\n                    }\n                </Grid>\n            </Container>\n        </div>\n    )\n};\n\nexport default DishesContainer;\n","import moment, {Moment} from \"moment\";\n\nexport const getCurrentWeek = (): Moment[] => {\n    const monday = moment().startOf('week').add(1, 'days');\n    let tuesday = moment().startOf('week').add(2, 'days');\n    let wednesday = moment().startOf('week').add(3, 'days');\n    let thursday = moment().startOf('week').add(4, 'days');\n    let friday = moment().startOf('week').add(5, 'days');\n    let saturday = moment().startOf('week').add(6, 'days');\n    let sunday = moment().startOf('week').add(7, 'days');\n    return [monday, tuesday, wednesday, thursday, friday, saturday, sunday];\n}\n","import {Button, Card, Container, Header} from \"semantic-ui-react\";\nimport moment from \"moment\";\nimport DishesContainer from \"./DishesContainer\";\nimport {generateJPEG} from \"../../util/tools\";\nimport React from \"react\";\nimport {Dish} from \"../../models/Dish\";\n\ntype DishesContainerCardParam = {dishes: Dish[], scheduleKey: string, restored: boolean, callback: (old: Dish, newDish: Dish) => void}\nexport const DishesContainerCard = (param: DishesContainerCardParam) => {\n    return (\n        <Card fluid color=\"teal\" style={{padding: '1em 0em'}}>\n            <Container>\n                {\n                    (param.restored &&\n                    <Header as='h2'>Wiederhergestellter Speiseplan</Header>)\n                }\n                {\n                    (!param.restored &&\n                        <Header as='h2'>Speiseplan für KW\n                            {\n                                moment().week()\n                            }\n                        </Header>\n                    )\n                }\n                <Header style={{marginBottom: \"5%\"}} as='h5'>Key: {param.scheduleKey}</Header>\n                <DishesContainer callback={param.callback} dishes={param.dishes}/>\n                <Button style={{marginTop: \"2%\"}} fluid color=\"teal\" onClick={() => generateJPEG()}>Export to\n                    JPEG</Button>\n            </Container>\n        </Card>\n    )\n}\n","import {Button, Card, Checkbox, Divider, Grid, Input} from \"semantic-ui-react\";\nimport {iVP} from \"../../util/tools\";\nimport React, {FormEvent, useState} from \"react\";\nimport {Dish} from \"../../models/Dish\";\nimport {DishesSupplier, generateKey, WeekSchedule} from \"../../util/DishesSupplier\";\nimport {RestoreForm} from \"./RestoreForm\";\nimport {DishesContainerCard} from \"./DishesContainerCard\";\n\nconst WeekplanCard = () => {\n    const [bbq, setBbq] = useState<boolean>(false)\n    const [order, setOrder] = useState<boolean>(false)\n    const [veggie, setVeggie] = useState<boolean>(false)\n    const [dishes, setDishes] = useState<Dish[]>([]);\n    const [exceptionDishes, enableExceptionDishes] = useState<boolean>(false);\n    const [validPassphrase, setValidPassphrase] = useState<boolean>(false);\n    const [key, setKey] = useState<string>('');\n    const [isRestored, setRestore] = useState<boolean>(false);\n\n\n    const regenerateKeys = (d1:Dish, d2: Dish) => {\n        let updatedDishes = dishes.map(d => d === d1 ? d2 : d);\n        setKey(generateKey(updatedDishes));\n    }\n\n    function generate(event: FormEvent<HTMLFormElement> | null) {\n        const generated: WeekSchedule = new DishesSupplier()\n            .withBBQ(bbq)\n            .withExceptionDishes(exceptionDishes)\n            .veggieOnly(veggie)\n            .withOrder(order)\n            .supply()\n\n        setDishes([]);\n        setDishes(generated.dishes);\n        setKey(generated.uuid);\n        if (event)\n            event.preventDefault();\n    }\n\n    return (\n        <div>\n            <Card fluid color=\"teal\" style={{padding: '1em 0em'}}>\n                <Card.Content>\n                    <Grid columns={2}>\n                        <Grid.Column>\n                            <Card.Header as='h2'>Wochenplan generieren</Card.Header>\n                            <form onSubmit={(event) => generate(event)}>\n                                <Grid container columns={2}>\n                                    <Grid style={{marginTop: \"2%\"}} container columns={2} stackable>\n                                        <Grid.Column>\n                                            <Checkbox style={{padding: '0em 1em'}} toggle\n                                                      onChange={() => setOrder(!order)}\n                                                      label=\"Lust essen zu bestellen? \"/>\n                                        </Grid.Column>\n                                        <Grid.Column>\n                                            <Checkbox style={{padding: '0em 1em'}} toggle\n                                                      onChange={() => setVeggie(!veggie)}\n                                                      label=\"Vegetarische Woche? \"/>\n                                        </Grid.Column>\n                                        <Grid.Column>\n                                            <Checkbox style={{padding: '0em 1em'}} toggle\n                                                      disabled={true}\n                                                      readOnly={true}\n                                                      onChange={() => enableExceptionDishes(!exceptionDishes)}\n                                                      label=\"Exception Dishes? \"/>\n                                        </Grid.Column>\n                                        <Grid.Column>\n                                            <Checkbox style={{padding: '0em 1em'}} toggle\n                                                      onChange={() => setBbq(!bbq)}\n                                                      label=\"Grillwetter? \"/>\n                                        </Grid.Column>\n                                        <Grid.Column>\n                                            <Input onChange={(event, data) => setValidPassphrase(iVP(data.value))}\n                                                   style={{padding: '0em 1em'}}\n                                                   size=\"mini\" label='Passphrase' type='password'/>\n                                        </Grid.Column>\n                                        <Grid.Column>\n                                            <Button type=\"submit\" disabled={!validPassphrase}\n                                                    onClick={() => generate(null)}\n                                                    basic\n                                                    color=\"teal\">Generieren\n                                            </Button>\n                                        </Grid.Column>\n                                    </Grid>\n                                </Grid>\n                            </form>\n                        </Grid.Column>\n                        <RestoreForm scheduleKey={key} keyFn={setKey} dishesCallback={setDishes} restoreFlag={setRestore}/>\n                    </Grid>\n                    <Divider vertical>ODER</Divider>\n                </Card.Content>\n            </Card>\n            {\n                dishes.length !== 0\n                &&\n                <DishesContainerCard callback={(old, newDish) => regenerateKeys(old,newDish)} dishes={dishes} scheduleKey={key} restored={isRestored}/>\n            }\n        </div>\n    )\n};\n\nexport default WeekplanCard;\n","import {Container, Grid} from \"semantic-ui-react\";\nimport WeekplanCard from \"./WeekplanCard\";\nimport React from \"react\";\n\nexport const WeekplanComponent = ()  => {\n\n    return (\n        <Grid container style={{padding: '3em 0em'}}>\n            <Container>\n                <WeekplanCard/>\n            </Container>\n        </Grid>\n    );\n}\n","import React from \"react\";\nimport {Container, Segment, Step} from \"semantic-ui-react\";\n\nexport const RoadmapComponent = () => {\n\n    const steps = [\n        {\n            key: 'food',\n            icon: 'food',\n            title: 'v1',\n            description: 'basic week schedule generation',\n        },\n        {\n            key: 'billing',\n            active: true,\n            icon: 'payment',\n            title: 'Billing',\n            description: 'Enter billing information',\n        },\n        {key: 'confirm', disabled: true, icon: 'info', title: 'Confirm Order'},\n    ]\n\n    return (\n        <div style={{display: \"flex\"}}>\n            <Container>\n                {\n                    (false &&\n                        <Segment>\n                            <Step.Group items={steps}/>\n                        </Segment>) ||\n                    (<h1>coming soon</h1>)\n                }\n            </Container>\n        </div>\n    );\n}\n","import React, {useState} from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'semantic-ui-css/semantic.min.css'\nimport {BrowserRouter, Link, Route, Switch} from \"react-router-dom\";\nimport {WeekplanComponent} from \"./components/home/WeekplanComponent\";\nimport {RoadmapComponent} from \"./components/roadmap/RoadmapComponent\";\nimport {Menu} from \"semantic-ui-react\";\n\nconst App = () => {\n\n    const [active, setActive] = useState<string>('home');\n\n    return (\n        <BrowserRouter>\n            <Menu pointing secondary color=\"teal\">\n                <Menu.Item\n                    name='Home'\n                    active={active === 'home'}>\n                    <Link style={{color: 'black'}} to=\"/wsched\" onClick={() => setActive('home')}>Wochenplan</Link>\n                </Menu.Item>\n                { false &&\n              <Menu.Item disabled={true}\n                    name='Roadmap'\n                    active={active === 'roadmap'}>\n                    <Link style={{color: 'black'}} to=\"/roadmap\" onClick={() => setActive('roadmap')}>Roadmap</Link>\n                </Menu.Item>}\n            </Menu>\n            <a href=\"https://github.com/talbx/wsched\">\n                <div className=\"ribbon\"><span>BETA</span></div>\n            </a>\n            <div>\n                <Switch>\n                    <Route path=\"/roadmap\">\n                        <RoadmapComponent/>\n                    </Route>\n                    <Route path=\"/wsched\">\n                        <WeekplanComponent/>\n                    </Route>\n                    <Route path=\"/\">\n                        <WeekplanComponent/>\n                    </Route>\n                </Switch>\n            </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}