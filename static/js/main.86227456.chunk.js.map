{"version":3,"sources":["Order.ts","Dishes.ts","tools.ts","WeekTable2.tsx","MenuCard.tsx","TodoSchedule.ts","TodoTable.tsx","TodoCard.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["FoodType","Dish","name","uuid","veggie","this","dish","uuidv4","dishes","Order","type","deliveryServices","ASIA","GREEK","BURGER","SUSHI","PIZZA","md5","require","replace","c","r","Math","random","toString","dow","WeekTable2","ref","useRef","Container","Table","celled","Header","Row","map","day","HeaderCell","key","Body","thingy","order","Cell","style","display","Label","basic","className","color","processOrder","processDish","MenuCard","useState","bbq","setBbq","setOrder","setVeggie","setDishes","validPassphrase","setValidPassphrase","generate","withOrder","veggieOnly","withBbq","arr","forEach","service","push","console","log","slice","sort","generateDishes","Card","fluid","padding","Content","Checkbox","toggle","onChange","label","checked","Input","event","data","passphrase","fn","pred","a","b","transformed","hash","isValidPassphrase","value","size","Button","disabled","onClick","length","as","WeeklyTodos","monday","tuesday","wednesday","thursday","friday","saturday","sunday","weekly","TodoTable","week","TodoCard","Map","App","Grid","container","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.86227456.chunk.js","sourcesContent":["import {uuidv4} from \"./tools\";\n\nexport class Order {\n    name: string;\n    type: FoodType;\n    veggie: boolean;\n    uuid: string;\n\n    constructor(name: string, type:FoodType, veggie: boolean) {\n        this.name = name;\n        this.type = type;\n        this.veggie = veggie;\n        this.uuid = uuidv4();\n    }\n}\n\nexport enum FoodType {\n    SUSHI=\"SUSHI\",\n    PIZZA=\"PIZZA\",\n    GREEK=\"GRIECHISCH\",\n    ASIA=\"ASIATISCH\",\n    BURGER=\"BURGER\"\n}\n\nexport const deliveryServices: Order[] = [\n    new Order(\"Kirat\", FoodType.ASIA, true),\n    new Order(\"Irodion\", FoodType.GREEK, false),\n    new Order(\"BurgerMe\", FoodType.BURGER, false),\n    new Order(\"Kirat\", FoodType.SUSHI, true),\n    new Order(\"Rohhäppchen\", FoodType.SUSHI, false),\n    new Order(\"ReadyPizza\", FoodType.PIZZA, true)\n];\n","import {uuidv4} from \"./tools\";\n\nexport class Dish {\n    name: string;\n    uuid: string;\n    veggie: boolean;\n\n    constructor(name: string, uuid: string, veggie: boolean) {\n        this.name = name;\n        this.uuid = uuid;\n        this.veggie = veggie;\n    }\n}\n\nconst dish = (name: string, veggie: boolean): Dish => {\n    return new Dish(name, uuidv4(), veggie);\n};\n\nexport const dishes: Dish[] = [\n    dish(\"Carbonara\", false),\n    dish(\"Bolo\", false),\n    dish(\"Pizza\", true),\n    dish(\"Normales Reiscurry\", true),\n    dish(\"Pfannkuchen\", true),\n    dish(\"Flammkuchen\", false),\n    dish(\"Brot mit Aufschnitt\", true),\n    dish(\"Tomatencreme Suppe\", true),\n    dish(\"Nudeln mit Sahne sauce\", true),\n    dish(\"Auflauf\", true),\n    dish(\"Süßes Ananas Reis Curry\", true),\n    dish(\"Salat\", true),\n    dish(\"Gulasch\", false),\n    dish(\"Chili con carne\", false),\n    dish(\"Geflügel-Reis Salat (Glutenfreies Kochbuch)\", false),\n    dish(\"Exotische Mörensuppe (Glutenfreies Kochbuch)\", true),\n    dish(\"Kokos-Curry (Glutenfreies Kochbuch)\", true),\n    dish(\"Buntes Gemüse-Tortilla (Glutenfreies Kochbuch)\", true),\n    dish(\"Rote Linsen mit Schafskäse (Glutenfreies Kochbuch)\", true),\n    dish(\"Risotto\", true),\n    dish(\"Fischfilet mit Kräuterkruste (Glutenfreies Kochbuch)\", false),\n    dish(\"Reispfanne mit Lachs (Glutenfreies Kochbuch)\", false),\n    dish(\"Gulasch Petti di Pollo (Glutenfreies Kochbuch)\", false),\n    dish(\"Rinderlende mit Paprika-Mix (Glutenfreies Kochbuch)\", false),\n    dish(\"Kalbsroulade (Glutenfreies Kochbuch)\", false),\n    dish(\"Gemüsepfanne\", true),\n    dish(\"Hühnerfrikassee\", false)\n];\n","import {Dish, dishes} from \"./Dishes\";\nimport {deliveryServices} from \"./Order\";\n\nvar md5 = require('md5');\n\nexport function uuidv4(): string {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        const r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\n        return v.toString(16);\n    });\n}\n\nexport const generateNRandomDishes = (n: number) => {\n    const shuffled = dishes.sort(() => 0.5 - Math.random());\n    return shuffled.slice(0, n);\n}\n\nexport const generateDishes = (withOrder: boolean, veggieOnly: boolean, withBbq: boolean) => {\n    const arr: any[] = [];\n    if (withOrder) {\n        deliveryServices.forEach(service => {\n            if (veggieOnly && service.veggie || !veggieOnly) {\n                arr.push(service)\n            }\n        });\n    }\n    dishes.forEach(dish => {\n        if (veggieOnly && dish.veggie || !veggieOnly) {\n            arr.push(dish)\n        }\n    });\n\n    if (withBbq) {\n        console.log(\"WITH BBQ: \", withBbq);\n        const shuffled = arr.sort(() => 0.5 - Math.random());\n        let slice = shuffled.slice(0, 6);\n        slice.push(new Dish(\"Grillen\", uuidv4(), false));\n        return slice.sort(() => 0.5 - Math.random())\n    }\n    const shuffled = arr.sort(() => 0.5 - Math.random());\n    return shuffled.slice(0, 7);\n}\n\nexport const isValidPassphrase = (\n    passphrase: string,\n    fn: (input: string) => string = md5,\n    pred: (p: string, comp: string) => boolean = (a, b) => a === b\n): boolean => {\n    let transformed = fn(passphrase);\n    const hash = \"9e3c4c2eb394293e3ab9e1d1e1e2c3ee\";\n    return pred(transformed, hash);\n}\n\nexport const dow = ['Montag', \"Dienstag\", \"Mittwoch\", \"Donnerstag\", \"Freitag\", \"Samstag\", \"Sonntag\"];\n","import React, {useRef} from \"react\";\nimport {Container, Label, Table} from \"semantic-ui-react\";\nimport {Order} from \"./Order\";\nimport {Dish} from \"./Dishes\";\nimport {dow} from \"./tools\";\n\n//@ts-ignore\nconst WeekTable2 = ({dishes}) => {\n    const ref = useRef();\n    return (\n        //@ts-ignore\n        <div ref={ref}>\n            <Container>\n                <Table celled>\n                    <Table.Header>\n                        <Table.Row>\n                            {\n                                dow.map(day => <Table.HeaderCell key={day}>{day}</Table.HeaderCell>)\n                            }\n                        </Table.Row>\n                    </Table.Header>\n                    <Table.Body>\n                        <Table.Row>\n                            {\n                                //@ts-ignore\n                                dishes.map(thingy => {\n                                    if (thingy instanceof Order) {\n                                        return processOrder(thingy);\n                                    }\n                                    return processDish(thingy);\n                                })\n                            }\n                        </Table.Row>\n                    </Table.Body>\n                </Table>\n            </Container>\n        </div>\n    )\n};\n\nexport default WeekTable2;\n\nfunction processDish(dish: Dish) {\n    if (dish.veggie) {\n        return <Table.Cell key={dish.uuid}>\n            {dish.name} <br/>\n            <Label basic className=\"mini\" color=\"green\">Veggie</Label>\n        </Table.Cell>\n    } else if (dish.name === \"Grillen\") {\n        return <Table.Cell key={dish.uuid}>\n            {dish.name} <br/>\n            <Label basic className=\"mini\" color=\"red\">BBQ</Label>\n        </Table.Cell>\n    }\n    return <Table.Cell key={dish.uuid}>{dish.name}</Table.Cell>\n}\n\nfunction processOrder(order: Order) {\n    if (order.veggie) {\n        return <Table.Cell key={order.uuid}>\n            {order.name} <br/>\n            <div style={{display: \"flex\"}}>\n                <Label basic className=\"mini\" color=\"green\">Veggie</Label>\n                <Label basic className=\"mini\" color=\"black\">Bestellung</Label>\n                <Label basic className=\"mini\" color=\"blue\">{order.type}</Label>\n            </div>\n        </Table.Cell>\n    }\n    return <Table.Cell key={order.uuid}>{order.name} <br/>\n        <div style={{display: \"flex\"}}>\n            <Label basic className=\"mini\" color=\"black\">Bestellung</Label>\n            <Label basic className=\"mini\" color=\"blue\">{order.type}</Label>\n        </div>\n    </Table.Cell>\n}\n","import {Button, Card, Checkbox, Container, Header, Input} from \"semantic-ui-react\";\nimport {generateDishes, isValidPassphrase} from \"./tools\";\nimport WeekTable2 from \"./WeekTable2\";\nimport React, {useState} from \"react\";\n\nconst MenuCard = () => {\n    const [bbq, setBbq] = useState(false)\n    const [order, setOrder] = useState(false)\n    const [veggie, setVeggie] = useState(false)\n    const [dishes, setDishes] = useState([]);\n    const [validPassphrase, setValidPassphrase] = useState(false);\n\n    function generate() {\n        //@ts-ignore\n        setDishes(generateDishes(order, veggie, bbq));\n    }\n\n    return (\n        <Card fluid color=\"teal\" style={{padding: '1em 0em'}}>\n            <Card.Content>\n                <Card.Header>Speiseplan</Card.Header>\n                <Checkbox style={{padding: '0em 1em'}} toggle onChange={() => setBbq(!bbq)}\n                          label=\"Grillwetter? \"/>\n                <Checkbox style={{padding: '0em 1em'}} toggle onChange={() => setOrder(!order)} checked={order}\n                          label=\"Lust essen zu bestellen? \"/>\n                <Checkbox style={{padding: '0em 1em'}} toggle onChange={() => setVeggie(!veggie)}\n                          checked={veggie}\n                          label=\"Vegetarische Woche? \"/>\n                <Input onChange={(event, data) => setValidPassphrase(isValidPassphrase(data.value))}\n                       style={{padding: '0em 1em'}}\n                       size=\"mini\" label='Passphrase' type='password'/>\n                <Button disabled={!validPassphrase} onClick={() => generate()} basic\n                        color=\"teal\">Generieren</Button>\n            </Card.Content>\n            {\n                dishes.length !== 0\n                &&\n                <Container>\n                    <Header as='h2'>Speiseplan für KW 3</Header>\n                    <WeekTable2 dishes={dishes}/>\n                </Container>\n            }\n        </Card>\n    )\n};\n\nexport default MenuCard;\n","export class WeeklyTodos {\n    monday: string;\n    tuesday: string;\n    wednesday: string;\n    thursday: string;\n    friday: string;\n    saturday: string;\n    sunday: string;\n\n    constructor(monday: string, tuesday: string, wednesday: string, thursday: string, friday: string, saturday: string, sunday: string) {\n        this.monday = monday;\n        this.tuesday = tuesday;\n        this.wednesday = wednesday;\n        this.thursday = thursday;\n        this.friday = friday;\n        this.saturday = saturday;\n        this.sunday = sunday;\n    }\n}\n\nexport const weekly = [\n    new WeeklyTodos(\"Zettelwirtschaft\", \"Einkaufen\", \"Küche\", \"\", \"Staubsaugen\", \"Pfand / Papier\", \"Aufräumen\"),\n    new WeeklyTodos(\"Staubsaugen\", \"\", \"Bad\", \"\", \"Einkaufen\", \"Küche\", \"Wäsche\"),\n    new WeeklyTodos(\"\", \"\", \"\", \"\", \"\", \"Bad\", \"\")\n]\n","import React from \"react\";\nimport {Table} from \"semantic-ui-react\";\nimport {dow} from \"./tools\";\nimport {weekly} from \"./TodoSchedule\";\n\nconst TodoTable = () => {\n    return (\n        <Table celled>\n            <Table.Header>\n                <Table.Row>\n                    {\n                        dow.map(day => <Table.HeaderCell key={day}>{day}</Table.HeaderCell>)\n                    }\n                </Table.Row>\n            </Table.Header>\n            <Table.Body>\n                {\n                    weekly.map(week => {\n                        return (\n                            <Table.Row>\n                                <Table.Cell>\n                                    {week.monday}\n                                </Table.Cell>\n                                <Table.Cell>\n                                    {week.tuesday}\n                                </Table.Cell>\n                                <Table.Cell>\n                                    {week.wednesday}\n                                </Table.Cell>\n                                <Table.Cell>\n                                    {week.thursday}\n                                </Table.Cell>\n                                <Table.Cell>\n                                    {week.friday}\n                                </Table.Cell>\n                                <Table.Cell>\n                                    {week.saturday}\n                                </Table.Cell>\n                                <Table.Cell>\n                                    {week.sunday}\n                                </Table.Cell>\n                            </Table.Row>\n                        )\n                    })\n                }\n                <Table.Row>\n\n                </Table.Row>\n            </Table.Body>\n        </Table>\n    )\n}\n\nexport default TodoTable;\n\nconst map = new Map();\n","import {Card} from \"semantic-ui-react\";\nimport React from \"react\";\nimport TodoTable from \"./TodoTable\";\n\nconst TodoCard = () => {\n    return (\n        <div>\n            <Card fluid color=\"teal\" style={{padding: '1em 0em'}}>\n                <Card.Content>\n                <Card.Header>Todos</Card.Header>\n                    <TodoTable/>\n                </Card.Content>\n            </Card>\n        </div>\n    )\n}\n\nexport default TodoCard;\n\n\n","import React, {useRef} from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'semantic-ui-css/semantic.min.css'\nimport {Container, Grid} from \"semantic-ui-react\";\nimport MenuCard from \"./MenuCard\";\nimport TodoCard from \"./TodoCard\";\n\nconst App = () => {\n    const componentRef = useRef();\n\n    return (\n        <Grid container style={{padding: '3em 0em'}}>\n            <Container>\n                <MenuCard/>\n                <TodoCard/>\n            </Container>\n        </Grid>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}